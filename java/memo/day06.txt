



쓰레드(Thread)



프로세스
쓰레드(Thread)
프로그램
	소스코드로 잘 짜여진 틀


프로세스
	실행된 프로그램.
	운영체제로부터 시스템 자원을 할당받는 작업의 단위.
	자바에서는 운영체제 대신 JVM과 소통하여 시스템 자원을 할당받는다.

쓰레드
	프로세스의 특정한 수행 경로.
	프로그램 처리 경로.
	전적으로 JVM에 의해 스케줄링 된다.

단일 쓰레드(매표소)
	직렬적이다. 처리경로는 한 개만 존재한다.
	매표소와 같이 앞의 작업이 완료 되어야 그 다음 작업이 시작된다.
	따라서 하나의 작업이 오래 걸리면 전체 작업속도가 느려지게 된다.
	하지만 한 개의 작업에서 오류가 발생하면 다른 작업에 영향을 미치지 않기 때문에
	안정적이고, 하나의 쓰레드 내에서 모든 작업을 순차적으로 진행하기 때문에
	메모리를 절약할 수 있다.

멀티 쓰레드(음식점)
	병렬적이다. 여러 개의 처리경로를 가지게 되며,
	한 개의 처리 경로를 나누어 동시 작업이 가능하다.
	하나의 프로세스를 동시에 처리하는 것 처럼 보이지만
	사실은 매우 짧은 단위로 분할해서 차례로 처리한다.
	JSP, SpringFramework 웹 서버가 대표적인 멀티 쓰레드 Application이다.

	장점
		효율성 증가
		처리량 증가
		처리비용 감소

	단점
		복잡하고 설계가 어려움
		자원 공유 문제(동기화)
		한 개의 쓰레드 문제 발생 시 전부 문제 발생
		교착상태(Dead Lock)

교착상태(Dead Lock)
	멀티 쓰레드 중 쓰레드 간 대기 상태가 종료되지 않아서
	무한정 대기만 하는 비정상적인 상태.

	오라클에서는 애플리케이션에 교착상태가 생기면 60초를 기준으로
	교착상태 판단 후 재시작 혹은 일부를 끊어준다.


멀티 쓰레드 구현 방법

	Thread 클래스 상속(start()를 바로 사용할 수 있다)
	Runnable 인터페이스 지정

[실습]
동물원에 동물 3마리가 있다. 
각 동물은 울음소리가 다르고 2마리의 동물은 동시에 운다.
나머지 1마리 동물은 2마리 동물이 모두 울고 나서 마지막에 운다.
클래스는 총 2개를 사용하고 하나의 클래스에는 main메소드가 있다.
Runnable 인터페이스로 멀티쓰레드를 구현하고 반드시 join()을 사용한다.
※각 동물은 10번씩만 운다. 제한시간 : 15분
-----------------------------------------------------------------------------
인코딩
	완성형(가, 각, 간, 갇...., 갛)
		EUC-KR

	조합형(ㄱ + ㅏ + ㄱ)
		UTF-8
-----------------------------------------------------------------------------
동기화(Synchronized)
	하나의 쓰레드가 자원을 사용하고 있을 때,
	다른 쓰레드가 동시에 같은 필드를 사용하지 못하게 막아주는 문법

1. 동기화 키워드
2. 동기화 블럭

동기화를 사용하는 이유
1. 여러 쓰레드가 하나의 자원을 공유했을 때 연산 및 다양한 문제가 발생할 수 있다.
   이 때에는 동기화를 사용하여 쓰레드가 하나씩 접근하도록 막아준다.
2. 각 쓰레드를 제어하기 위해서

-------------------------------------------------------------------

--------------------------------------------

파일 입출력

-파일 기준
	Writer(입력)
	Reader(출력

-Java Application 기준
	Writter(출력)
	Reader(입력)



-File : 경로를 전달해주면 해당 경로의 파일의 정보를 담을 수 있다.
		1. 파일 존재 여부
		2. 해당 경로의 파일 삭제




Writer
	-BufferedWriter : 문서(텍스트, 엑셀 ,...)
	-OutputStreamWriter : 파일(이미지, 동영상 , ...)

	-FileWriter : 쓰기위한 목적으로 해당 경로의 파일을 열어준다.
		     default로 파일 내용을 전부 지운 후 열어준다.
		     만약 해당 경로에 파일이 없다면 새롭게 만든 후 가져온다.

Reader
	-BufferedReader
	-InputStreamReader


	-FileReader : 읽기 위한 목적으로 해당 경로의 파일을 열어준다
		      만약 해당 경로에 파일이 없다면 예외가 발생한다.


Buffer(임시 저장 공간)

	.java파일에서 .txt파일에 문자열을 작성할 때
	하나씩 전송하다 보면 효율이 떨어진다.
	따라서 전송할 데이터들을 한 번에 모은 후 일괄처리를 해야 하고,
	Buffer라는 저장공간에 모은 후 flush()를 통해 비워준다.
	파일 입출력에서는 flush만 사용하지 않고 열린 파일을 닫아주는
	close()를 사용한다. 사용 후 반드시 close()를 통해 flush를 해주어야
	작성한 내용이 파일에 적용된다.






































