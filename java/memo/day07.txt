소프트웨어 디자인 설계 패턴
MVC


Model
	Controller에서 사용하는 비어있는 껍데기.
	외부저장소 조회 결과를 담을 수 있는
	틀을 선언해 놓은 클래스를 의미한다.
	이러한 클래스를 담아놓는 패키지 명은 VO 또는 DTO로 작성한다.
	VO (value object) : 결과값을 담고 있는 객체
	DTO(data transfer object) : 결과값을 갖고 여기저기 필요한 쪽으로
				전송되는 객체

View
	사용자가 볼 화면을 구성하는 영역
	Controller를 통해서 적절한 메소드를 호출하고
	그 결과를 화면 구성에 맞게 뿌려준다.

Controller
	외부 저장소에 접근할 수 있는 기능들을 구현한다.
	각 기능들은 메소드로 설계하고 결과가 있다면
	Model 객체에 담은 후 리턴해준다.
	Controller를 담아놓는 패키지명은 dao로 작성한다.
	DAO(data access object) : 데이터에 접근하는 객체

※어플리케이션 개발 시 MVC 모델은 반드시 사용할 필요는 없다.

model1(소규모, 중규모)
	model2에 비해서 설계가 쉽다.
	하지만 Controller와 View가 섞여 있기 때문에
	model2에 비해서 유지보수가 어렵다.

model2(대규모)
	model2는 설꼐가 복잡하고 어렵다.
	하지만 model1에 비해서 유지보수 및 분업이 쉽다.
	대규모 혹은 장기계획을 갖는 프로젝트에 사용되는 설계 패턴이다.


































