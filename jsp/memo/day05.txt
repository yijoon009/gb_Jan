MyBatis
	소스코드 안에 SQL문을 작성하면 코드가 길어지고 섞여 있어서 유지보수 및 분업이
	쉽지 않아진다. MyBatis는 기존 JDBC방식과는 달리 SQL문을 XML파일에 작성함으로써
	코드가 줄어들고, SQL문 수정이 편해진다. 또한 DBCP를 사용하여 커넥션을 여러 개
	생성하기 때문에 JDBC만 사용하는 것보다는 작업 효율과 가독성이 좋아진다.
	ibatis는 2.5버전이며 JDK4버전 이상, MyBatis는 3.0버전이며 JDK5버전 이상에서 
	지원한다. ibatis와 MyBatis의 차이점은 몇 개의 문법 및 사용 용어(명칭) 변경
	등이 있다.

MyBatis 작동 순서

1) 응용 프로그램이 SqlSessionFactoryBuilder를 통해 SqlSessionFactory를 빌드하도록 요청한다.
2) SqlSessionFactoryBuilder는 SqlSessionFactory를 생성하기 위한 MyBatis 구성 파일을 읽는다.
3) SqlSessionFactoryBuilder는 MyBatis 구성 파일의 정의에 따라 SqlSessionFactory를 생성한다.
4) 클라이언트가 응용 프로그램에 대한 프로세스를 요청한다.
5) 응용 프로그램은 SqlSessionFactoryBuilder를 사용하여 빌드된 SqlSessionFactory에서 
   SqlSession을 가져온다.
6) SqlSessionFactory는 SqlSession을 생성하고 이를 Application에 반환한다.
7) 응용 프로그램에 SqlSession에서 매퍼 인터페이스의 구현 개체를 가져온다.
8) 응용 프로그램이 매퍼 인터페이스의 메소드를 호출한다.
9) 매퍼 인터페이스의 구현 개체가 SqlSession의 메소드를 호출하고 SQL실행을 요청한다.
10) SqlSession은 매핑 파일에서 실행할 SQL을 가져와서 SQL을 실행한다.

MyBatis 설치
	https://blog.mybatis.org/p/products.html



























